/**
 * Ory APIs
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * OpenAPI spec version: v0.1.0-alpha.12
 * Contact: support@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SubmitSelfServiceSettingsFlowWithLookupMethodBody } from './SubmitSelfServiceSettingsFlowWithLookupMethodBody.ts';
import { SubmitSelfServiceSettingsFlowWithOidcMethodBody } from './SubmitSelfServiceSettingsFlowWithOidcMethodBody.ts';
import { SubmitSelfServiceSettingsFlowWithPasswordMethodBody } from './SubmitSelfServiceSettingsFlowWithPasswordMethodBody.ts';
import { SubmitSelfServiceSettingsFlowWithProfileMethodBody } from './SubmitSelfServiceSettingsFlowWithProfileMethodBody.ts';
import { SubmitSelfServiceSettingsFlowWithTotpMethodBody } from './SubmitSelfServiceSettingsFlowWithTotpMethodBody.ts';
import { SubmitSelfServiceSettingsFlowWithWebAuthnMethodBody } from './SubmitSelfServiceSettingsFlowWithWebAuthnMethodBody.ts';
import { HttpFile } from '../http/http.ts';

export class SubmitSelfServiceSettingsFlowBody {
    /**
    * CSRFToken is the anti-CSRF token
    */
    'csrf_token'?: string;
    /**
    * Method  Should be set to \"lookup\" when trying to add, update, or remove a lookup pairing.
    */
    'method': string;
    /**
    * Password is the updated password
    */
    'password': string;
    /**
    * The identity's traits  in: body
    */
    'traits': any;
    /**
    * Flow ID is the flow's ID.  in: query
    */
    'flow'?: string;
    /**
    * Link this provider  Either this or `unlink` must be set.  type: string in: body
    */
    'link'?: string;
    /**
    * Unlink this provider  Either this or `link` must be set.  type: string in: body
    */
    'unlink'?: string;
    /**
    * ValidationTOTP must contain a valid TOTP based on the
    */
    'totp_code'?: string;
    /**
    * UnlinkTOTP if true will remove the TOTP pairing, effectively removing the credential. This can be used to set up a new TOTP device.
    */
    'totp_unlink'?: boolean;
    /**
    * Register a WebAuthn Security Key  It is expected that the JSON returned by the WebAuthn registration process is included here.
    */
    'webauthn_register'?: string;
    /**
    * Name of the WebAuthn Security Key to be Added  A human-readable name for the security key which will be added.
    */
    'webauthn_register_displayname'?: string;
    /**
    * Remove a WebAuthn Security Key  This must contain the ID of the WebAuthN connection.
    */
    'webauthn_remove'?: string;
    /**
    * If set to true will save the regenerated lookup secrets
    */
    'lookup_secret_confirm'?: boolean;
    /**
    * Disables this method if true.
    */
    'lookup_secret_disable'?: boolean;
    /**
    * If set to true will regenerate the lookup secrets
    */
    'lookup_secret_regenerate'?: boolean;
    /**
    * If set to true will reveal the lookup secrets
    */
    'lookup_secret_reveal'?: boolean;

    static readonly discriminator: string | undefined = "method";

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "csrf_token",
            "baseName": "csrf_token",
            "type": "string",
            "format": ""
        },
        {
            "name": "method",
            "baseName": "method",
            "type": "string",
            "format": ""
        },
        {
            "name": "password",
            "baseName": "password",
            "type": "string",
            "format": ""
        },
        {
            "name": "traits",
            "baseName": "traits",
            "type": "any",
            "format": ""
        },
        {
            "name": "flow",
            "baseName": "flow",
            "type": "string",
            "format": ""
        },
        {
            "name": "link",
            "baseName": "link",
            "type": "string",
            "format": ""
        },
        {
            "name": "unlink",
            "baseName": "unlink",
            "type": "string",
            "format": ""
        },
        {
            "name": "totp_code",
            "baseName": "totp_code",
            "type": "string",
            "format": ""
        },
        {
            "name": "totp_unlink",
            "baseName": "totp_unlink",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "webauthn_register",
            "baseName": "webauthn_register",
            "type": "string",
            "format": ""
        },
        {
            "name": "webauthn_register_displayname",
            "baseName": "webauthn_register_displayname",
            "type": "string",
            "format": ""
        },
        {
            "name": "webauthn_remove",
            "baseName": "webauthn_remove",
            "type": "string",
            "format": ""
        },
        {
            "name": "lookup_secret_confirm",
            "baseName": "lookup_secret_confirm",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "lookup_secret_disable",
            "baseName": "lookup_secret_disable",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "lookup_secret_regenerate",
            "baseName": "lookup_secret_regenerate",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "lookup_secret_reveal",
            "baseName": "lookup_secret_reveal",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SubmitSelfServiceSettingsFlowBody.attributeTypeMap;
    }

    public constructor() {
        this.method = "SubmitSelfServiceSettingsFlowBody";
    }
}

